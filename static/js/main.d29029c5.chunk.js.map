{"version":3,"sources":["components/Post.tsx","api/getTabs.ts","components/Tabs.tsx","components/TabsPage.tsx","components/BackgroundAnimation.tsx","components/HomePage.tsx","App.tsx","index.tsx"],"names":["Post","props","post","title","body","split","map","pars","idx","key","API_URL","getData","url","a","fetch","response","json","getTabs","Promise","all","tabs","posts","tab","find","id","content","withRouter","match","useState","setTabs","useEffect","then","findPost","className","activeClassName","to","path","isExact","href","target","rel","render","params","currentTabId","TabsPage","BackgroundAnimation","HomePage","App","exact","component","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.d29029c5.chunk.js","sourcesContent":["import React from 'react';\n\ninterface Props {\n  post: PostIF | null;\n}\n\nconst Post: React.FC<Props> = (props) => {\n  if (!props?.post) {\n    return null;\n  }\n\n  const { post } = props;\n\n  return (\n    <>\n      <h3>{post.title}</h3>\n      {post.body.split('\\n').map((pars: string, idx: number) => (\n        // eslint-disable-next-line react/no-array-index-key\n        <p key={idx}>{pars}</p>\n      ))}\n    </>\n  );\n};\n\nexport default Post;\n","const API_URL = 'https://andreas-just.github.io/react_tabs-with-router/src/api';\n\nexport const getData = async (url: string) => {\n  const response = await fetch(url);\n\n  // console.log(response);\n  return response.json();\n};\n\nexport const getTabs = async (): Promise<TabIF[]> => {\n  const [tabs, posts] = await Promise.all([\n    getData(`${API_URL}/tabs.json`),\n    getData(`${API_URL}/posts.json`),\n  ]);\n\n  // console.log(tabs, posts);\n  return tabs.map((tab: TabFromServer) => ({\n    ...tab,\n    post: posts.find((post: PostIF) => post.id === tab.content),\n  }));\n};\n","import React, { useEffect, useState } from 'react';\nimport {\n  Route,\n  NavLink,\n  withRouter,\n  RouteComponentProps,\n} from 'react-router-dom';\nimport Post from './Post';\n\nimport { getTabs } from '../api/getTabs';\n\ninterface Props extends RouteComponentProps<TParams> {\n  match: Match;\n}\n\nconst Tabs: React.FC<Props> = ({ match }) => {\n  const [tabs, setTabs] = useState<TabIF[]>([]);\n\n  useEffect(() => {\n    getTabs().then(setTabs);\n  }, []);\n  const findPost = (id: string) => tabs\n    .find(tab => tab.content === +id)?.post || null;\n\n  return (\n    <>\n      <div className=\"ui attached tabular menu inverted brown\">\n        {tabs.map(tab => (\n          <NavLink\n            key={tab.content}\n            className=\"item\"\n            activeClassName=\"active\"\n            to={`${match.path}/${tab.content}`}\n          >\n            {tab.title}\n          </NavLink>\n        ))}\n      </div>\n\n      { match.isExact && (\n        <div className=\"ui segment inverted thanks\">\n          <h3 className=\"thanks__title\">Dear Reader!</h3>\n          <div className=\"thanks__text\">\n            If you like posts press the button with a&nbsp;&nbsp;\n            <div className=\"ui large image label\">\n              <i className=\"star icon\" />\n              Star\n              <div className=\"detail\">8</div>\n            </div>\n            &nbsp;&nbsp;on this&nbsp;&nbsp;\n            <a\n              href=\"https://github.com/Andreas-Just/react_tabs-with-router\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              className=\"ui large brown image label\"\n            >\n              <i className=\"github alternate icon\" />\n              GitHub Page\n            </a>\n          </div>\n        </div>\n      )}\n\n      <Route\n        path={`${match.path}/:currentTabId`}\n        render={({ match: { params } }) => (\n          <div className=\"ui bottom attached segment active tab inverted\">\n            {\n              findPost(params.currentTabId) && (\n                <Post post={findPost(params.currentTabId)} />\n              )\n            }\n          </div>\n        )}\n      />\n    </>\n  );\n};\n\nexport default withRouter(Tabs);\n","import React from 'react';\nimport Tabs from './Tabs';\n\nconst TabsPage = () => (\n  <>\n    <h2 className=\"ui brown header page__title\">Posts page</h2>\n    <Tabs />\n  </>\n);\n\nexport default TabsPage;\n","import React from 'react';\n\nconst BackgroundAnimation = () => (\n  <div className=\"hero\">\n    <div className=\"cube\" />\n    <div className=\"cube\" />\n    <div className=\"cube\" />\n    <div className=\"cube\" />\n    <div className=\"cube\" />\n    <div className=\"cube\" />\n    <div className=\"cube\" />\n  </div>\n);\n\nexport default BackgroundAnimation;\n","import React from 'react';\nimport BackgroundAnimation from './BackgroundAnimation';\n\nconst HomePage = () => (\n  <>\n    <BackgroundAnimation />\n    <h2 className=\"ui brown header page__title\">Home page</h2>\n    <h4 className=\"ui brown header page__title\">\n      Greetings to fans of interesting posts!\n    </h4>\n  </>\n);\n\nexport default HomePage;\n","import React from 'react';\nimport { Route, Switch, NavLink } from 'react-router-dom';\nimport TabsPage from './components/TabsPage';\nimport HomePage from './components/HomePage';\nimport './App.scss';\n\nconst App = () => (\n  <div className=\"header\">\n    <div className=\"ui brown three item inverted menu\">\n      <NavLink\n        className=\"item\"\n        activeClassName=\"active\"\n        to=\"/\"\n        exact\n      >\n        Home\n      </NavLink>\n      <NavLink\n        className=\"item\"\n        activeClassName=\"active\"\n        to=\"/tabs\"\n      >\n        Posts\n      </NavLink>\n    </div>\n\n    <h1 className=\"ui brown header header__title\">React tabs with router</h1>\n\n    <Switch>\n      <Route path=\"/\" exact component={HomePage} />\n      <Route path=\"/tabs\" component={TabsPage} />\n    </Switch>\n  </div>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport App from './App';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}